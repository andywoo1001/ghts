***** 크로스 컴파일  *****
환경변수 GOARCH를 변경하면 크로스 컴파일이 가능함.
cgo가 포함된 크로스 컴파일의 경우에는 부트스트래핑 후 사용 가능함.
> go tool dist install -v runtime
> go install -v -a std
> SET cgo_enabled=1


***** C언어 구조체를 Go언어 구조체로 직접 변환(casting) *****
아래에 나온 cgo 명령어를 실행시키면,
C언어로 된 구조체를 내부 메모리 형식까지 동일하게 Go언어로 변환해서,
C언어에서 넘겨받은 구조체의 포인터를 그대로 Go언어 구조체로 변환(cast) 할 수 있음.
(그 반대도 가능함.)

> go tool cgo -godefs cgo_practice.go
(모든 C언어 데이터 구조를 Go언어로 해석해서 화면에 출력함.)

위에서 나온 과정을 자동화 하기 위한 추가 조사 필요함.
관련 자료 : http://comments.gmane.org/gmane.comp.lang.go.general/160702

***** DLL형식의 API 사용 방안 *****
'golang.org/x/sys/windows'패키지를 사용해서 
Go언어에서 DLL형태의 증권사 API를 직접 호출하되,
입출력에 사용되는 구조체 형식의 데이터는 C언어 구조체와 Go언어 구조체 간에
직접 변환(cast)할 수 있도록 하면, DLL의 기능을 마치 Go언어 함수를 호출하듯이 
편리하게 사용할 수 있다.