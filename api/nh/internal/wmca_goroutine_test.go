package internal

import (
	공용 "github.com/ghts/ghts/common"

	"strings"
	"testing"
	_ "time"
)

func f접속_확인() {
	if !f접속됨() {
		질의 := 공용.New질의_가변형(P30초, 공용.P메시지_GET, 테스트용_ID, 테스트용_암호, 테스트용_공인인증_암호)
		질의.S질의(Ch접속)
		질의.G회신()	// 메시지
		질의.G회신()	// 로그인 정보
		
		if !f접속됨() {
			panic("접속 시도 실패")
		}
	}
}

func Test_Ch접속(테스트 *testing.T) {
	if f접속됨() {
		공용.New질의_가변형(P30초, 공용.P메시지_GET).S질의(Ch접속_해제).G회신()
	}

	질의 := 공용.New질의_가변형(P30초, 공용.P메시지_GET, 테스트용_ID, 테스트용_암호, 테스트용_공인인증_암호)
	질의.S질의(Ch접속)

	회신1 := 질의.G회신()
	공용.F테스트_에러없음(테스트, 회신1.G에러())
	공용.F테스트_같음(테스트, 회신1.G구분(), 공용.P메시지_OK)
	공용.F테스트_같음(테스트, 회신1.G길이(), 1)

	회신2 := 질의.G회신()
	공용.F테스트_에러없음(테스트, 회신2.G에러())
	공용.F테스트_같음(테스트, 회신2.G구분(), 공용.P메시지_OK)
	공용.F테스트_같음(테스트, 회신2.G길이(), 1)

	로그인_정보 := S로그인_정보{}
	수신_메시지 := S수신_메시지_블록{}

	로그인_정보1, ok1 := 회신1.G내용(0).(S로그인_정보)
	로그인_정보2, ok2 := 회신2.G내용(0).(S로그인_정보)
	if ok1 {
		로그인_정보 = 로그인_정보1
	} else if ok2 {
		로그인_정보 = 로그인_정보2
	}

	수신_메시지1, ok1 := 회신1.G내용(0).(S수신_메시지_블록)
	수신_메시지2, ok2 := 회신2.G내용(0).(S수신_메시지_블록)
	if ok1 {
		수신_메시지 = 수신_메시지1
	} else if ok2 {
		수신_메시지 = 수신_메시지2
	}

	공용.F테스트_같음(테스트, 로그인_정보.M접속ID, 테스트용_ID)
	//공용.F테스트_같음(테스트, 로그인_정보.M접속서버, "newmt.wontrading.com")
	공용.F테스트_참임(테스트, strings.HasPrefix(로그인_정보.M접속서버, "mt")) //??
	공용.F테스트_참임(테스트, len(로그인_정보.M계좌_목록) > 0)

	테스트용_계좌_인덱스 := -1
	for 인덱스, 계좌_정보 := range 로그인_정보.M계좌_목록 {
		if 계좌_정보.M계좌_번호 == 테스트용_계좌_번호 {
			테스트용_계좌_인덱스 = 인덱스 + 1 //계좌번호 인덱스는 '1'부터 시작됩니다.
			break
		}
	}

	공용.F테스트_참임(테스트, 테스트용_계좌_인덱스 > 0)
	공용.F테스트_같음(테스트, len(수신_메시지.M메시지_코드), 5)
	공용.F테스트_참임(테스트, strings.Contains(수신_메시지.M메시지_내용, "로그인"))
	공용.F테스트_참임(테스트, strings.Contains(수신_메시지.M메시지_내용, "성공"))
	
	회신 := 공용.New질의_가변형(P30초, 공용.P메시지_GET).S질의(Ch접속됨).G회신()
	공용.F테스트_에러없음(테스트, 회신.G에러())
	공용.F테스트_참임(테스트, 회신.G내용(0).(bool))
	공용.F테스트_참임(테스트, f접속됨())
}

func TestCh조회(테스트 *testing.T) {
	testCh조회_주식_현재가(테스트)
}

func testCh조회_주식_현재가(테스트 *testing.T) {
	f접속_확인()
	
	종목_코드 := 공용.F임의_종목().G코드()
	질의 := 공용.New질의_가변형(P30초, 공용.P메시지_GET, TR주식_현재가_조회, 종목_코드)
	질의.S질의(Ch조회)
	
	for !질의.G회신_종료() {
		회신 := 질의.G회신()
		//공용.F테스트_에러없음(테스트, 회신.G에러())
		공용.F테스트_같음(테스트, 회신.G구분(), 공용.P메시지_OK)
		공용.F테스트_같음(테스트, 회신.G길이(), 1)
		
		데이터, ok := 회신.G내용(0).(I수신_데이터_NH)
		공용.F테스트_참임(테스트, ok)
		
		공용.F문자열_출력("블록 이름 : %v", 데이터.G블록_이름())
	}	
}

func TestCh접속_해제(테스트 *testing.T) {
	f접속_확인()
	
	질의 := 공용.New질의_가변형(P30초, 공용.P메시지_GET)
	질의.S질의(Ch접속_해제)
	질의.G회신()
	
	회신 := 공용.New질의_가변형(P30초, 공용.P메시지_GET).S질의(Ch접속됨).G회신()
	공용.F테스트_에러없음(테스트, 회신.G에러())
	공용.F테스트_거짓임(테스트, 회신.G내용(0).(bool))
	공용.F테스트_거짓임(테스트, f접속됨())
}